# Generated by Django 2.2.13 on 2020-06-12 22:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('appname', models.CharField(max_length=200, null=True)),
                ('full_name', models.CharField(db_index=True, max_length=300, unique=True)),
                ('namespace_abbreviation', models.TextField(blank=True, max_length=255, null=True)),
                ('namespace_uri', models.URLField(blank=True, null=True)),
                ('namespace_description', models.TextField(blank=True, null=True)),
                ('abstract', models.TextField(blank=True, help_text='A  description of the project, its importance, etc.', max_length=4000, null=True)),
                ('is_standard', models.BooleanField(default=False)),
                ('attribution', models.TextField(blank=True, help_text='A description of the people / institutions responsible for collecting the data.', max_length=1000, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('geographic', models.CharField(blank=True, max_length=255, null=True)),
                ('temporal', models.CharField(blank=True, max_length=255, null=True)),
                ('graphic', models.FileField(blank=True, max_length=255, null=True, upload_to='uploads/images/projects')),
                ('occurrence_table_name', models.CharField(blank=True, help_text='The name of the main occurrence table in the models.py file of the associated app', max_length=255, null=True)),
                ('is_public', models.BooleanField(default=False, help_text='Is the raw data to be made publicly viewable?')),
                ('display_summary_info', models.BooleanField(default=True, help_text='Should project summary data be published? Only uncheck this in extreme circumstances')),
                ('display_fields', models.TextField(blank=True, default="['id',]", help_text="A list of fields to display in the public view of the data, first entry should be 'id'", max_length=2000, null=True)),
                ('display_filter_fields', models.TextField(blank=True, default='[]', help_text='A list of fields to filter on in the public view of the data, can be empty list []', max_length=2000, null=True)),
                ('default_app_model', models.TextField(blank=True, null=True)),
                ('geom', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProjectTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('native', models.BooleanField(default=False, help_text='If true, this term is native to the project or standard, otherwise the term is being reused by the project or standard.')),
                ('mapping', models.CharField(blank=True, help_text='If this term is being reused from another standard or project, the mapping field is used to provide the name of the field in this project or standard as opposed to the name in the project or standard from which it is being reused.', max_length=255, null=True)),
                ('min_set', models.BooleanField(default=False)),
                ('max_set', models.BooleanField(default=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard.Project')),
            ],
            options={
                'verbose_name': 'Term Mapping',
                'verbose_name_plural': 'Term Mappings',
                'db_table': 'standard_project_term',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('definition', models.TextField(blank=True, null=True)),
                ('example', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('version_iri', models.URLField(blank=True, null=True)),
                ('iri', models.URLField(blank=True, null=True)),
                ('issued', models.DateField(blank=True, null=True)),
                ('rdf_type', models.URLField(blank=True, null=True)),
                ('abcd', models.CharField(blank=True, max_length=255, null=True)),
                ('flags', models.CharField(blank=True, max_length=100, null=True)),
                ('is_class', models.BooleanField(default=False)),
                ('term_ordering', models.IntegerField(blank=True, null=True)),
                ('is_vocabulary', models.BooleanField(default=False)),
                ('uses_controlled_vocabulary', models.BooleanField(default=False)),
                ('controlled_vocabulary', models.CharField(blank=True, max_length=75, null=True)),
                ('controlled_vocabulary_url', models.CharField(blank=True, max_length=155, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True)),
                ('data_range', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TermDataType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Term Type',
                'verbose_name_plural': 'Term Types',
                'db_table': 'standard_term_data_type',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TermRelationship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TermStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Term Status',
                'verbose_name_plural': 'Term Statuses',
                'db_table': 'standard_term_status',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TermMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('relationship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard.TermRelationship')),
                ('term1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard.Term')),
                ('term2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='term2_term', to='standard.Term')),
            ],
        ),
        migrations.CreateModel(
            name='TermCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('uri', models.CharField(blank=True, max_length=255, null=True)),
                ('is_occurrence', models.BooleanField()),
                ('tree_visibility', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='standard.TermCategory')),
            ],
            options={
                'verbose_name': 'Term Category',
                'verbose_name_plural': 'Term Categories',
                'db_table': 'standard_term_category',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='term',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='standard.TermCategory'),
        ),
        migrations.AddField(
            model_name='term',
            name='data_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='standard.TermDataType'),
        ),
        migrations.AddField(
            model_name='term',
            name='mapping',
            field=models.ManyToManyField(through='standard.TermMapping', to='standard.Term'),
        ),
        migrations.AddField(
            model_name='term',
            name='projects',
            field=models.ManyToManyField(blank=True, through='standard.ProjectTerm', to='standard.Project'),
        ),
        migrations.AddField(
            model_name='term',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='standard.TermStatus'),
        ),
        migrations.AddField(
            model_name='term',
            name='verbatim_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='term_verbatim_category', to='standard.TermCategory'),
        ),
        migrations.AddField(
            model_name='projectterm',
            name='term',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='standard.Term'),
        ),
        migrations.AddField(
            model_name='project',
            name='terms',
            field=models.ManyToManyField(blank=True, through='standard.ProjectTerm', to='standard.Term'),
        ),
        migrations.AlterUniqueTogether(
            name='projectterm',
            unique_together={('project', 'term')},
        ),
    ]
